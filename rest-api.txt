----------------------------------------------rest api-----------------------------------------------------------------------------------------------------------------------------
rest-api structure

->go to spring.io download dependencies


step1: download required dependencies like
-spring data jpa
-spring web
-MySQL etc

step2: create packages like
-entity
-repository
-payload
-exception
-service
-controller etc

step3: configure MySQL in application.properties

spring.datasource.url=jdbc:mysql://localhost:3307/db
spring.datasource.username=root
spring.datasource.password=%password%
spring.jpa.hibernate.ddl-auto=update

step4: create entity class

step5: create payload class

step6: create repository

step7: create service class

step8: create @ControllAdvice class for exception
       -custom exception
       -global exception
step9: pagination (fetching records based on inputs/configuration)
       in controller follow nrd (@RequestParam name="pageNo", required=false,defaultValue="0") int pageNo, etc
       in service follow Sort-->Pageable-->Page

step10: Validation: It will validates the entity or dto class by-using below annotation
        :add validation dependencies: 

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

like : @Email ,@NotNull, @Size it applicable only string ,etc
@Valid BindingResult result it will validates the all above validations and combines and it will display in postman/swagger   

Rest-Api-code:-> https://github.com/Rahul-ix/Rest_Api
Rest-Api-Documentation:-> https://documenter.getpostman.com/view/30113311/2sAYkEpKVJ
           --------------------------end rest api--------------------


